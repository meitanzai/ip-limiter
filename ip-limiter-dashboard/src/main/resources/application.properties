spring.boot.enableautoconfiguration=true
#服务的端口号
server.port = 20520
spring.application.name = ip-limiter-dashboard

#Sentinel相关的配置，需要应用引入方在应用的application.properties配置文件中增加以下几个配置项
#[应用必填]Sentinel客户端端口
sentinel.apiPort = 20521

#active.env= DEV
# 将 Apollo 配置加载提到初始化日志系统之前，需要托管日志配置时开启
apollo.bootstrap.eagerLoad.enabled = true
# 应用全局唯一的身份标识
app.id = ip-limiter-dashboard
# Apollo Meta Server 地址
#apollo.meta = http://apollo.dev.imlaidian.com:8072
# 自定义本地配置文件缓存路径
apollo.cacheDir = ./config
# 设置在应用启动阶段就加载 Apollo 配置
apollo.bootstrap.enabled = true
# 注入 application namespace
apollo.bootstrap.namespaces = application

#下面配置项都在Apollo中配置
#ip.limiter.dashboard.permitsPerSecondEachIp = 50
#ip.limiter.dashboard.maxTopAccessIps = 10
#ip.limiter.dashboard.maxRedisTopAccessIps = 50
#ip.limiter.dashboard.globalMaxRedisTopAccessIps = 50
#ip.limiter.dashboard.maxRedisTopAccessMinutes = 60
#ip.limiter.dashboard.globalMaxRedisTopAccessMinutes = 60
#ip.limiter.dashboard.redisLockMaxWaitMillis = 60000
#ip.limiter.dashboard.maxTopAccessMinutes = 30
#ip.limiter.dashboard.connectTimeout = 5000
#ip.limiter.dashboard.soTimeout = 5000
#ip.limiter.dashboard.maxConnTotal = 100
#ip.limiter.dashboard.maxConnPerRoute = 10
#ip.limiter.dashboard.maxHttpRetryTimes = 5
#ip.limiter.dashboard.httpRetryIntervalTime = 20
#ip.limiter.dashboard.appClientHealthCheckRate = 1
#ip.limiter.dashboard.systemAddBlackIpCheckRate 

#spring.redis.host = 192.168.10.232
#spring.redis.port = 6379
#spring.redis.password = laidiantech
#spring.redis.database = 10
#spring.redis.timeout = 5000
#spring.redis.jedis.pool.max-idle = 8
#spring.redis.jedis.pool.min-idle = 0
#spring.redis.jedis.pool.max-wait = 8
#spring.redis.jedis.pool.max-active = 20